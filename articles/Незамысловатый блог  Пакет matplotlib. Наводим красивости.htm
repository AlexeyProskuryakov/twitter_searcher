<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0049)http://pyviy.blogspot.com/2009/09/matplotlib.html -->
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta content="76ba81176c3a85cc" name="yandex-verification">


<script src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/jquery.min.js"></script><script src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/cb=gapi.loaded_1" async=""></script><script src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/cb=gapi.loaded_0" async=""></script><script type="text/javascript">(function() { var a=window,b="jstiming",d="tick";var e=function(c){this.t={};this.tick=function(c,p,h){h=void 0!=h?h:(new Date).getTime();this.t[c]=[h,p]};this[d]("start",null,c)},f=new e;a.jstiming={Timer:e,load:f};if(a.performance&&a.performance.timing){var g=a.performance.timing,j=a[b].load,k=g.navigationStart,l=g.responseStart;0<k&&l>=k&&(j[d]("_wtsrt",void 0,k),j[d]("wtsrt_","_wtsrt",l),j[d]("tbsd_","wtsrt_"))}
try{var m=null;a.chrome&&a.chrome.csi&&(m=Math.floor(a.chrome.csi().pageT),j&&0<k&&(j[d]("_tbnd",void 0,a.chrome.csi().startE),j[d]("tbnd_","_tbnd",k)));null==m&&a.gtbExternal&&(m=a.gtbExternal.pageT());null==m&&a.external&&(m=a.external.pageT,j&&0<k&&(j[d]("_tbnd",void 0,a.external.startE),j[d]("tbnd_","_tbnd",k)));m&&(a[b].pt=m)}catch(n){};a.tickAboveFold=function(c){var i=0;if(c.offsetParent){do i+=c.offsetTop;while(c=c.offsetParent)}c=i;750>=c&&a[b].load[d]("aft")};var q=!1;function r(){q||(q=!0,a[b].load[d]("firstScrollTime"))}a.addEventListener?a.addEventListener("scroll",r,!1):a.attachEvent("onscroll",r);
 })();</script>
<meta content="true" name="MSSmartTagsPreventParsing">
<meta content="blogger" name="generator">
<link href="http://pyviy.blogspot.com/favicon.ico" rel="icon" type="image/x-icon">
<link href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/Незамысловатый блог  Пакет matplotlib. Наводим красивости.htm" rel="canonical">
<link rel="alternate" type="application/atom+xml" title="Незамысловатый блог - Atom" href="http://pyviy.blogspot.com/feeds/posts/default">
<link rel="alternate" type="application/rss+xml" title="Незамысловатый блог - RSS" href="http://pyviy.blogspot.com/feeds/posts/default?alt=rss">
<link rel="service.post" type="application/atom+xml" title="Незамысловатый блог - Atom" href="http://www.blogger.com/feeds/920988537392180762/posts/default">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.blogger.com/rsd.g?blogID=920988537392180762">
<link rel="alternate" type="application/atom+xml" title="Незамысловатый блог - Atom" href="http://pyviy.blogspot.com/feeds/2561400527735838727/comments/default">
<link rel="image_src" href="http://lh5.ggpht.com/_oMYflydwAbM/SsHl7qLBflI/AAAAAAAAAJ8/3RNEUfVcrWw/s72-c/setp_example.png">
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>Незамысловатый блог: Пакет matplotlib. Наводим красивости</title>
<link type="text/css" rel="stylesheet" href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/1937454905-widget_css_bundle.css">
<link type="text/css" rel="stylesheet" href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/authorization.css">
<style id="page-skin-1" type="text/css"><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Son of Moto (Mean Green Blogging Machine variation)
Designer: Jeffrey Zeldman
URL:      www.zeldman.com
Date:     23 Feb 2004
Updated by: Blogger Team
----------------------------------------------- */
/* Variable definitions
====================
<Variable name="mainBgColor" description="Main Background Color"
type="color" default="#ffffff">
<Variable name="mainTextColor" description="Text Color"
type="color" default="#555544">
<Variable name="pageHeaderColor" description="Blog Title Color"
type="color" default="#ffffee">
<Variable name="blogDescriptionColor" description="Blog Description Color"
type="color" default="#ffffee">
<Variable name="linkColor" description="Link Color"
type="color" default="#669922">
<Variable name="hoverLinkColor" description="Link Hover Color"
type="color" default="#88bb22">
<Variable name="dateHeaderColor" description="Date Header Color"
type="color" default="#555544">
<Variable name="sidebarHeaderColor" description="Sidebar Title Color"
type="color" default="#555544">
<Variable name="sidebarTextColor" description="Sidebar Text Color"
type="color" default="#555544">
<Variable name="bodyFont" description="Text Font" type="font"
default="normal normal 100% tahoma, 'Trebuchet MS', lucida, helvetica, sans-serif">
<Variable name="startSide" description="Start side in blog language"
type="automatic" default="left">
<Variable name="endSide" description="End side in blog language"
type="automatic" default="right">
*/
/* Primary layout */
body {
margin: 0;
padding: 0;
border: 0;
text-align: center;
color: #555544;
background: #692 url(http://www.blogblog.com/moto_son/outerwrap.gif) top center repeat-y;
font-size: small;
}
img {
border: 0;
display: block;
}
.clear {
clear: both;
}
/* Wrapper */
#outer-wrapper {
margin: 0 auto;
border: 0;
width: 90%;
text-align: left;
background: #ffffff url(http://www.blogblog.com/moto_son/innerwrap.gif) top right repeat-y;
font: normal normal 120% Trebuchet, Trebuchet MS, Arial, sans-serif;
}
/* Header */
#header-wrapper	{
background: #8b2 url(http://www.blogblog.com/moto_son/headbotborder.gif) bottom left repeat-x;
margin: 0 auto;
padding-top: 0;
padding-right: 0;
padding-bottom: 15px;
padding-left: 0;
border: 0;
}
#header h1 {
text-align: left;
font-size: 200%;
color: #ffffee;
margin: 0;
padding-top: 15px;
padding-right: 20px;
padding-bottom: 0;
padding-left: 20px;
background-image: url(http://www.blogblog.com/moto_son/topper.gif);
background-repeat: repeat-x;
background-position: top left;
}
h1 a, h1 a:link, h1 a:visited {
color: #ffffee;
}
#header .description {
font-size: 110%;
text-align: left;
padding-top: 3px;
padding-right: 20px;
padding-bottom: 10px;
padding-left: 23px;
margin: 0;
line-height:140%;
color: #ffffee;
}
/* Inner layout */
#content-wrapper {
padding: 0 16px;
}
#main {
width: 70%;
float: left;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}
#sidebar {
width: 20%;
float: right;
color: #555544;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}
/* Bottom layout */
#footer	{
clear: left;
margin: 0;
padding: 0 20px;
border: 0;
text-align: left;
border-top: 1px solid #f9f9f9;
}
#footer .widget	{
text-align: left;
margin: 0;
padding: 10px 0;
background-color: transparent;
}
/* Default links 	*/
a:link, a:visited {
font-weight: bold;
text-decoration: none;
color: #669922;
background: transparent;
}
a:hover {
font-weight: bold;
text-decoration: underline;
color: #88bb22;
background: transparent;
}
a:active {
font-weight : bold;
text-decoration : none;
color: #88bb22;
background: transparent;
}
/* Typography */
.main p, .sidebar p, .post-body {
line-height: 140%;
margin-top: 5px;
margin-bottom: 1em;
}
.post-body blockquote {
line-height:1.3em;
}
h2, h3, h4, h5	{
margin: 0;
padding: 0;
}
h2 {
font-size: 130%;
}
h2.date-header {
color: #555544;
}
.post h3 {
margin-top: 5px;
font-size: 120%;
}
.post-footer {
font-style: italic;
}
.sidebar h2 {
color: #555544;
}
.sidebar .widget {
margin-top: 12px;
margin-right: 0;
margin-bottom: 13px;
margin-left: 0;
padding: 0;
}
.main .widget {
margin-top: 12px;
margin-right: 0;
margin-bottom: 0;
margin-left: 0;
}
li  {
line-height: 160%;
}
.sidebar ul {
margin-left: 0;
margin-top: 0;
padding-left: 0;
}
.sidebar ul li {
list-style: disc url(http://www.blogblog.com/moto_son/diamond.gif) inside;
vertical-align: top;
padding: 0;
margin: 0;
}
.widget-content {
margin-top: 0.5em;
}
/* Profile
----------------------------------------------- */
.profile-datablock {
margin-top: 3px;
margin-right: 0;
margin-bottom: 5px;
margin-left: 0;
line-height: 140%;
}
.profile-textblock {
margin-left: 0;
}
.profile-img {
float: left;
margin-top: 0;
margin-right: 5px;
margin-bottom: 5px;
margin-left: 0;
border:4px solid #8b2;
}
#comments  {
border: 0;
border-top: 1px dashed #eed;
margin-top: 10px;
margin-right: 0;
margin-bottom: 0;
margin-left: 0;
padding: 0;
}
#comments h4	{
margin-top: 10px;
font-weight: normal;
font-style: italic;
text-transform: uppercase;
letter-spacing: 1px;
}
#comments dl dt 	{
font-weight: bold;
font-style: italic;
margin-top: 35px;
padding-top: 1px;
padding-right: 0;
padding-bottom: 0;
padding-left: 18px;
background: transparent url(http://www.blogblog.com/moto_son/commentbug.gif) top left no-repeat;
}
#comments dl dd	{
padding: 0;
margin: 0;
}
.deleted-comment {
font-style:italic;
color:gray;
}
.feed-links {
clear: both;
line-height: 2.5em;
}
#blog-pager-newer-link {
float: left;
}
#blog-pager-older-link {
float: right;
}
#blog-pager {
text-align: center;
}
/** Page structure tweaks for layout editor wireframe */
body#layout #outer-wrapper {
padding-top: 0;
}
body#layout #header,
body#layout #content-wrapper,
body#layout #footer {
padding: 0;
}

--></style>
<style>

span.fullpost {display:inline;}

</style>
<style type="text/css">

p { text-indent : 30px; text-align : justify; }

code { white-space : pre; font-family : courier new; }



.pre { white-space : pre; font-family : courier new;}



.item { color : blue; }

.gitem { color : green; }



.code { white-space : pre; font-family : courier new; color : #3333ff; }



.console { white-space : pre; font-family : courier new; color : #990000; }



.codeblock { font-family : courier new; padding : 20px; background-color: #f0eee6; border : 2px solid #c1b496; overflow : auto;}

.noteblock { font-size : smaller; padding : 20px; background-color: #bfbfbf; border : 2px solid #5b5b5b; overflow : auto;}



table.my { background-color: #000000; border-spacing : 1px; width : 80%; }

th.my { text-align : center; padding : 5px; background-color: #c1b496; }

td.my { text-align : left; padding : 5px 5px 5px 40px; background-color: #f0eee6;}

</style>
<script type="text/javascript">var a=navigator,b="userAgent",c="indexOf",f="&m=1",g="(^|&)m=",h="?",i="?m=1";function j(){var d=window.location.href,e=d.split(h);switch(e.length){case 1:return d+i;case 2:return 0<=e[1].search(g)?null:d+f;default:return null}}if(-1!=a[b][c]("Mobile")&&-1!=a[b][c]("WebKit")&&-1==a[b][c]("iPad")||-1!=a[b][c]("Opera Mini")||-1!=a[b][c]("IEMobile")){var k=j();k&&window.location.replace(k)};
</script><script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/google_top_exp.js"></script><style>.gc-bubbleDefault{text-align:left;padding:0 !important;margin:0 !important;border:0 !important;table-layout:auto !important}.gc-reset{border:0 !important;padding:0 !important;margin:0 !important;text-align:left}.pls-bubbleTop{border-bottom:1px solid #ccc !important}.pls-topTail,.pls-vertShimLeft,.pls-contentLeft{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/border_3.gif) !important}.pls-topTail{background-repeat:repeat-x !important;background-position:bottom !important}.pls-vertShim{background-color:#fff !important;text-align:right}.pls-vertShimLeft{background-repeat:repeat-y !important;background-position:right !important}.pls-confirm-container .pls-vertShim{background-color:#fff3c2 !important}.pls-contentWrap{background-color:#fff !important;position:relative !important;vertical-align:top}.pls-contentLeft{background-repeat:repeat-y;background-position:right;vertical-align:top}.pls-dropRight{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleDropR_3.png) !important;background-repeat:repeat-y !important;vertical-align:top}.pls-vert,.pls-tailleft,.pls-dropTR .pls-dropBR,.pls-dropBL,.pls-vert img{vertical-align:top}.pls-dropBottom{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleDropB_3.png) !important;background-repeat:repeat-x !important;width:100%;vertical-align:top}.pls-topLeft{background:inherit !important;text-align:right;vertical-align:bottom}.pls-topRight{background:inherit !important;text-align:left;vertical-align:bottom}.pls-bottomLeft{background:inherit !important;text-align:right}.pls-bottomRight{background:inherit !important;text-align:left;vertical-align:top}.pls-tailtop,.pls-tailright,.pls-tailbottom,.pls-tailleft{display:none;position:relative}.pls-tailbottom,.pls-tailtop,.pls-tailright,.pls-tailleft,.pls-dropTR,.pls-dropBR,.pls-dropBL{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleSprite_3.png) !important;background-repeat:no-repeat}.pls-tailbottom{background-position:-23px 0}.pls-confirm-container .pls-tailbottom{background-position:-23px -10px}.pls-tailtop{background-position:-19px -20px}.pls-tailright{background-position:0 0}.pls-tailleft{background-position:-10px 0}.pls-tailtop{vertical-align:top}.gc-bubbleDefault td{line-height:0;font-size:0}.pls-topLeft img,.pls-topRight img,.pls-tailbottom{vertical-align:bottom}.pls-bottomLeft img,.bubbleDropTR,.pls-dropBottomL img,.pls-dropBottom img,.pls-dropBottomR img,.pls-bottomLeft{vertical-align:top}.pls-dropTR{background-position:0 -22px}.pls-dropBR{background-position:0 -27px}.pls-dropBL{background-position:0 -16px}.pls-spacertop,.pls-spacerright,.pls-spacerbottom,.pls-spacerleft{position:static !important}.pls-spinner{bottom:0;position:absolute;left:0;margin:auto;right:0;top:0}</style><script type="text/javascript" src="chrome-extension://bfbmjmiodbnnpllbbbfblcplfjjepjdn/js/injected.js"></script><script src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/sf_main.jsp" defer=""></script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/base_single_icon.js"></script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/dojo.xd.js"></script><script type="text/javascript" charset="utf-8" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/script.xd.js"></script><script type="text/javascript" charset="utf-8" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/window.xd.js"></script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/getSupportedSitesJSON.action" id="sufioIoScript1" charset="utf-8"></script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/rvwl.action" id="sufioIoScript2" charset="utf-8"></script></head>
<body><div style="position: fixed; top: 0px; left: 0px; height: 0px; width: 0px; z-index: 9999999; "><div style="position: fixed; top: 100%; height: 0px; "><div style="position: relative; "></div></div></div>
<div class="navbar section" id="navbar"><div class="widget Navbar" id="Navbar1"><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener('load',
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<div id="navbar-iframe-container"><iframe allowtransparency="true" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="" tabindex="0" vspace="0" width="100%" id="navbar-iframe" name="navbar-iframe" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/navbar.htm"></iframe></div>
<script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/plusone.js" gapi_processed="true"></script>
<script type="text/javascript">
        gapi.load("iframes-styles-bubble", function() {
          if (window.iframes && iframes.open) {
            iframes.open(
                '//www.blogger.com/navbar.g?targetBlogID\75920988537392180762\46blogName\75%D0%9D%D0%B5%D0%B7%D0%B0%D0%BC%D1%8B%D1%81%D0%BB%D0%BE%D0%B2%D0%B0%D1%82%D1%8B%D0%B9+%D0%B1%D0%BB%D0%BE%D0%B3\46publishMode\75PUBLISH_MODE_BLOGSPOT\46navbarType\75BLUE\46layoutType\75LAYOUTS\46searchRoot\75http://pyviy.blogspot.com/search\46blogLocale\75ru\46v\0752\46homepageUrl\75http://pyviy.blogspot.com/\46targetPostID\0752561400527735838727\46blogPostOrPageUrl\75http://pyviy.blogspot.com/2009/09/matplotlib.html\46vt\75-843124718851014669',
                {
                  container: "navbar-iframe-container",
                  id: "navbar-iframe"
                },
                {
                });
          }
        });
      </script><script type="text/javascript">
(function() {
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '//pagead2.googlesyndication.com/pagead/js/google_top_exp.js';
var head = document.getElementsByTagName('head')[0];
if (head) {
head.appendChild(script);
}})();
</script>
</div></div>
<div id="outer-wrapper"><div id="wrap2">
<!-- skip links for text browsers -->
<span id="skiplinks" style="display:none;">
<a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#main">skip to main </a> |
      <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#sidebar">skip to sidebar</a>
</span>
<div id="header-wrapper">
<div class="header section" id="header"><div class="widget Header" id="Header1">
<div id="header-inner">
<div class="titlewrapper">
<h1 class="title">
<a href="http://pyviy.blogspot.com/">Незамысловатый блог</a>
</h1>
</div>
<div class="descriptionwrapper">
<p class="description"><span>
</span></p>
</div>
</div>
</div></div>
</div>
<div id="content-wrapper">
<div id="crosscol-wrapper" style="text-align:center">
<div class="crosscol section" id="crosscol"></div>
</div>
<div id="main-wrapper">
<div class="main section" id="main"><div class="widget Blog" id="Blog1">
<div class="blog-posts hfeed">
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class="date-header"><span>30.09.09</span></h2>

          <div class="date-posts">
        
<div class="post-outer">
<div class="post hentry uncustomized-post-template">
<a name="2561400527735838727"></a>
<h3 class="post-title entry-title">
<a href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/Незамысловатый блог  Пакет matplotlib. Наводим красивости.htm">Пакет matplotlib. Наводим красивости</a>
</h3>
<div class="post-header-line-1"></div>
<div class="post-body entry-content">
<p>Продолжаем разговор о пакете <strong>matplotlib</strong>. Сегодня обсудим способы изменения внешнего вида элементов диаграмм - другими словами способы наведения красивостей.</p>

<span class="fullpost">

<h3>Изменение свойств графических элементов пакета matplotlib</h3>

<p>Как уже неоднократно отмечалось - в логике <strong>matplotlib</strong> каждый графический элемент (линия, подпись, рамка, сетка и т.д.) представлен объектом соответствующего класса. Команды (функции) пакета <strong>matplotlib</strong>, отвечающие за создание какого-либо элемента, как результат выполнения возвращают ссылку на объект представляющий данный элемент:</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> import matplotlib.pyplot as plt</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line, = plt.plot([1, 2, 3])</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line</span>
<span class="console">&lt;matplotlib.lines.Line2D object at 0x030509D0&gt;</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> type(line)</span>
<span class="console">&lt;class 'matplotlib.lines.Line2D'&gt;</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> caption = plt.title(u'Заголовок диаграммы')</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> caption</span>
<span class="console">&lt;matplotlib.text.Text object at 0x0308FC90&gt;</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> type(caption)</span>
<span class="console">&lt;class 'matplotlib.text.Text'&gt;</span>
</pre>

<p>Авторы пакета <strong>matplotlib</strong> предусмотрели три способа изменения свойств графических объектов.</p>

<p><b>Первый способ.</b> Каждая команда пакета, создающая тот или иной графический элемент, принимает набор именованных переменных (для каждой из этих переменных уже задано значение по умолчанию), имена которых, как правило, совпадают с именами соответствующих полей (свойств) объекта. Изменяя значения именованных переменных можно изменять свойства создаваемого объекта:</p> 

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot([1, 2, 3], color = 'red', marker = '^', linestyle = '--', linewidth = 2, markersize = 5, label = u'Прямая линия')</span>
<span class="console">[&lt;matplotlib.lines.Line2D object at 0x02E3E150&gt;]</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> plt.title(u'Заголовок диаграммы', color = 'black', family = 'fantasy', fontsize = 'x-large')</span>
<span class="console">&lt;matplotlib.text.Text object at 0x02E66E10&gt;</span>
</pre>

<p><b>Второй способ.</b> Как и подобает в соответствии с догмами объектно-ориентированного программирования, для каждого поля объекта существуют методы, предоставляющие возможность читать/писать значение поля. Уже существующий объект можно настроить посредством указанных методов:</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> line, = plt.plot([1, 2, 3])</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line.set_color('red')</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line.set_marker('^')</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line.set_linestyle('--')</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> line.set_linewidth(2)</span>
</pre>

<p>В <strong>matplotlib</strong> принято следующее соглашение по именованию методов - метод возвращающий значение свойства <span class="code">property</span> именуется <span class="code">get_property()</span>, метод изменяющий значение свойства <span class="code">set_property()</span></p>

<p><b>Третий способ.</b> Часто возникает необходимость для группы объектов (не обязательно экземпляров одного и того же класса) установить одинаковые значения для одного (нескольких) общих свойств. На этот случай авторы <strong>matplotlib</strong> предусмотрели специальную функцию <span class="code">matplotlib.pyplot.setp(*args, **kwargs)</span> - "setup property" - установить свойство. Функция принимает ссылку или список ссылок на объекты и произвольный набор именованных переменных соответствующих изменяемым свойствам:</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> import matplotlib.pyplot as plt</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> import numpy as np</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> X = np.linspace(0.0, 5.0, 10)</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> Y1 = X</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> Y2 = 3 * X</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> Y3 = 7 * X</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> lines = plt.plot(X, Y1, X, Y2, X, Y3)</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> plt.setp(lines, color = 'red', marker = '^', linestyle = '--', linewidth = 2)</span>
<span class="console">[None, None, None, None, None, None, None, None, None, None, None, None]</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> plt.show()</span>
</pre>

<p>В результате выполнения кода примера появиться вот такое окно:</p>

<a href="http://lh5.ggpht.com/_oMYflydwAbM/SsHl7qLBflI/AAAAAAAAAJ8/3RNEUfVcrWw/setp_example.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/setp_example.png" border="0" alt="Пакет matplotlib. Пример использования функции setp()"></a>

<p>Все три линии на диаграмме оформлены одинаково.</p>

<p>А какой глубокий смысл кроется в структуре возвращаемой функцией <span class="code">setp()</span> я, честно говоря, не знаю.</p>

<p>Возможен и альтернативный синтаксис вызова функции. Вместо набора именованных переменных функция принимает набор пар: строка - имя свойства, произвольный тип - значение свойства (так принято работать с объектами в Matlab):</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.setp(lines, 'color', 'red', 'marker', '^', 'linestyle', '--', 'linewidth', 2)</span>
</pre>

<p>Если необходимо узнать какие значения допустимы для того или иного свойства объекта, можно вызвать функцию <span class="code">setp()</span> передав ей ссылку на объект и строку - имя свойства.</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.setp(line, 'linestyle')</span>
<span class="console"> linestyle: [ '-' | '--' | '-.' | ':' | 'None' | ' ' | '' ] and any drawstyle in combination with a linestyle, e.g. 'steps--'.</span>
<span class="console">&gt;&gt;&gt;</span><span class="code"> plt.setp(line, 'color')</span>
<span class="console"> color: any matplotlib color</span>
</pre>

<p>Если вызвать функцию <span class="code">setp()</span>, передав только ссылку на объект, будет выведен список всех свойств объекта и список возможных значений для каждого из свойств:</p> 

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.setp(line)</span>
<span class="console">  alpha: float (0.0 transparent through 1.0 opaque)
  animated: [True | False]
  antialiased or aa: [True | False]
  axes: an :class:`~matplotlib.axes.Axes` instance
  ...</span>
</pre>

<p>Ну и если первый аргумент функции - список ссылок на объекты, описанные выше действия производятся для объекта, ссылка на который стоит в переданном списке первой.</p>

<p>В качестве примера приведу код программы использующей все три способа настройки объектов.</p>

<p>Для начала построим диаграмму без каких либо дополнительных настроек, пусть все свойства всех объектов будут инициализированы системой значениями по умолчанию.</p>

<pre class="codeblock"><font color="#0000ff"># -*- coding: UTF-8 -*-</font>

<font color="#a020f0">import</font>&nbsp;numpy <font color="#a020f0">as</font>&nbsp;np
<font color="#a020f0">import</font>&nbsp;matplotlib <font color="#a020f0">as</font>&nbsp;mpl
<font color="#a020f0">import</font>&nbsp;matplotlib.pyplot <font color="#a020f0">as</font>&nbsp;plt

<font color="#0000ff"># Значения по оси X</font>
X = np.linspace(0.0, 2.0, 15)
<font color="#0000ff"># Значения по оси Y</font>
Y_01 = X
Y_02 = X * 3
Y_03 = X * 7

<font color="#0000ff"># Задаем размер диаграммы</font>
mpl.rcParams['<font color="#ff00ff">figure.figsize</font>'] = (8.0, 6.0)

<font color="#0000ff"># Строим диаграмму</font>
<font color="#0000ff"># Линии</font>
line_01 = plt.plot(X, Y_01)
line_02 = plt.plot(X, Y_02)
line_03 = plt.plot(X, Y_03)

<font color="#0000ff"># Сохраняем диаграмму в файл</font>
plt.savefig('<font color="#ff00ff">set_exmp_01.png</font>', format = '<font color="#ff00ff">png</font>')
</pre>

<p>В результате получим вот такое изображение:</p>

<a href="http://lh3.ggpht.com/_oMYflydwAbM/SsIT7aAv_HI/AAAAAAAAAKA/9IX7-epWi1w/set_exmp_01.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/set_exmp_01.png" border="0" title="Пакет matplotlib. Пример диаграммы при значениях свойств объектов по умолчанию"></a>

<p>Теперь, взяв за основу код предыдущего примера, настроим, как хотим, свойства каждой прямой.</p>

<pre class="codeblock"><font color="#0000ff"># -*- coding: UTF-8 -*-</font>

<font color="#a020f0">import</font>&nbsp;numpy <font color="#a020f0">as</font>&nbsp;np
<font color="#a020f0">import</font>&nbsp;matplotlib <font color="#a020f0">as</font>&nbsp;mpl
<font color="#a020f0">import</font>&nbsp;matplotlib.pyplot <font color="#a020f0">as</font>&nbsp;plt

<font color="#0000ff"># Значения по оси X</font>
X = np.linspace(0.0, 2.0, 15)
<font color="#0000ff"># Значения по оси Y</font>
Y_01 = X 
Y_02 = X * 3
Y_03 = X * 7

<font color="#0000ff"># Задаем размер диаграммы</font>
mpl.rcParams['<font color="#ff00ff">figure.figsize</font>'] = (8.0, 6.0)

<font color="#0000ff"># Строим диаграмму</font>

<font color="#0000ff"># Линии</font>

<font color="#0000ff"># Первый способ настройки объектов</font>
line_01, = plt.plot(X, Y_01, color = '<font color="#ff00ff">blue</font>', linestyle = '<font color="#ff00ff">:</font>', linewidth = 1, marker = '<font color="#ff00ff">s</font>',&nbsp;&nbsp;markersize = 6, markeredgecolor = '<font color="#ff00ff">black</font>', markerfacecolor = '<font color="#ff00ff">blue</font>', markeredgewidth = 1, label = u'<font color="#ff00ff">y = x</font>'&nbsp;)

line_02,&nbsp;&nbsp;= plt.plot(X, Y_02)
line_03,&nbsp;&nbsp;= plt.plot(X, Y_03)

<font color="#0000ff"># Второй способ настройки объектов</font>
line_02.set_color('<font color="#ff00ff">red</font>')
line_02.set_linestyle('<font color="#ff00ff">:</font>')
line_02.set_linewidth(1)
line_02.set_marker('<font color="#ff00ff">D</font>')
line_02.set_markersize(5)
line_02.set_markeredgecolor('<font color="#ff00ff">black</font>')
line_02.set_markerfacecolor('<font color="#ff00ff">red</font>')
line_02.set_markeredgewidth(1)
line_02.set_label(u'<font color="#ff00ff">y = 3 * x</font>')

<font color="#0000ff"># Третьий способ настройки объектов</font>
plt.setp(line_03, color = '<font color="#ff00ff">magenta</font>', linestyle = '<font color="#ff00ff">:</font>', linewidth = 1, marker = '<font color="#ff00ff">o</font>', markersize = 6, markeredgecolor = '<font color="#ff00ff">black</font>', markerfacecolor = '<font color="#ff00ff">magenta</font>', markeredgewidth = 1, label = u'<font color="#ff00ff">y = 7 * x</font>')

<font color="#0000ff"># Задаем интервалы значений по осям X, Y</font>
plt.axis((-0.03, 2.03, -0.2, 14.2))

<font color="#0000ff"># Добавим легенду</font>
plt.legend(loc = '<font color="#ff00ff">best</font>')

<font color="#0000ff"># Сохраняем диаграмму в файл</font>
plt.savefig('<font color="#ff00ff">set_exmp_02.png</font>', format = '<font color="#ff00ff">png</font>')
</pre>

<p>Теперь изображение будет выглядеть вот так:</p>

<a href="http://lh5.ggpht.com/_oMYflydwAbM/SsIXTzWrWAI/AAAAAAAAAKE/Cx9asIl10Qo/set_exmp_02.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/set_exmp_02.png" border="0" alt="Пакет matplotlib. Пример диаграммы при измененных значениях свойств объектов"></a>

<p>В примерах, для формирования массивов значений был использован модуль <strong>NumPy</strong>. С описанием использованных функций этого модуля можно познакомиться прочтя пост <a href="http://pyviy.blogspot.com/2009/09/numpy.html" title="Пакет NumPy. Краткое введение">Пакет NumPy. Краткое введение</a></p>

<p>Остановимся подробнее на свойствах объектов класса <span class="code">matplotlib.lines.Line2D</span> - линии, которая неизбежно присутствует практически на каждой диаграмме.</p>

<h3>О свойствах объектов класса matplotlib.lines.Line2D</h3>

<p>Ниже в таблице приведены основные свойства объекта класса <span class="code">matplotlib.lines.Line2D</span>.</p>

<table class="my">

<tbody>

<tr>
<th class="my" width="20%">Свойство</th>
<th class="my" width="20%">Значение</th>
<th class="my">Описание</th>
</tr>

<tr>
<td class="my"><b>alpha</b></td>
<td class="my">Вещественное число в интервале [0.0, 1.0]</td>
<td class="my">Степень прозрачность элементов линии (собственно линии и маркеров) - от полностью прозрачного 0.0, до полностью непрозрачного 1.0. Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#alpha">ниже</a></td>
</tr>

<tr>
<td class="my"><b>antialiased</b> или <b>aa</b></td>
<td class="my">True, False</td>
<td class="my">Включить (True), выключить (False) режим антиалиазинга элементов линии</td>
</tr>

<tr>
<td class="my"><b>color</b> или <b>c</b></td>
<td class="my">Один из возможных способов представления цвета в <strong>matplotlib</strong>, подробности смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#color">ниже</a></td>
<td class="my">Цвет линии</td>
</tr>

<tr>
<td class="my"><b>dash_capstyle</b></td>
<td class="my">Строки: 'butt', 'round', 'projecting'</td>
<td class="my">Стиль оконечностей пунктирной линии. Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#dash_capstyle">ниже</a></td>
</tr>

<tr>
<td class="my"><b>dash_joinstyle</b></td>
<td class="my">Строки: 'miter', 'round', 'bevel'</td>
<td class="my">Стиль соединения пунктирных линий</td>
</tr>

<tr>
<td class="my"><b>dashes</b></td>
<td class="my">Список (кортеж) целых чисел, количество элементов списка должно быть четным</td>
<td class="my">Каждая пара чисел в списке рассматривается как количество индуцируемых точек, количество погашенных точек. С помощью свойства <b>dashes</b> можно рисовать линии состоящие из произвольного повторяющегося набора штрихов и пунктиров. Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#dashes">ниже</a></td>
</tr>

<tr>
<td class="my"><b>drawstyle</b></td>
<td class="my">Строки: 'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'</td>
<td class="my">Стиль отображения линии: 'default' - соседние точки соединены прямой, остальные значения - соседние точки соединены пересекающимися под прямым углом отрезками ("ступенькой") с различными вариациями пересечения отрезков. Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#drawstyle">ниже</a></td>
</tr>

<tr>
<td class="my"><b>label</b></td>
<td class="my">Произвольная строка</td>
<td class="my">Подпись к линии, используется при создании легенды диаграммы</td>
</tr>

<tr>
<td class="my"><b>linestyle</b> или <b>ls</b></td>
<td class="my">Строки: '-', '--', '-.', ':', 'steps', 'steps-pre', 'steps-mid', 'steps-post', 'None', ' ', ''</td>
<td class="my">Стиль линии. Пример использования первых четырех стилей был приведен <a href="http://pyviy.blogspot.com/2009/08/matplotlib.html" title="Пакет matplotlib. Строим банальный график">ранее</a>, пример использования следующих четырех (можно задавать и через свойство <b>drawstyle</b>) смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#drawstyle">ниже</a>, 'None', пробел и пустая строка выключают отображение линии, (собственно линии, маркеры, при этом, будут отображаться)</td>
</tr>

<tr>
<td class="my"><b>linewidth</b> или <b>lw</b></td>
<td class="my">float</td>
<td class="my">Толщина линии в точках</td>
</tr>

<tr>
<td class="my"><b>marker</b></td>
<td class="my">Строки: '.', ',', 'o', 'v', '^', '&lt;', '&gt;', '1', '2', '3', '4', 's', 'p', '*', 'h', 'H', '+', 'x', 'D', 'd', '|', '_'</td>
<td class="my">Стиль маркера. Пример использования был приведен <a href="http://pyviy.blogspot.com/2009/08/matplotlib.html" title="Пакет matplotlib. Строим банальный график">ранее</a></td>
</tr>

<tr>
<td class="my"><b>markeredgecolor</b> или <b>mec</b></td>
<td class="my">Один из возможных способов представления цвета в <strong>matplotlib</strong>, подробности смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#color">ниже</a></td>
<td class="my">Цвет границы маркера</td>
</tr>

<tr>
<td class="my"><b>markeredgewidth</b> или <b>mew</b></td>
<td class="my">float</td>
<td class="my">Толщина границы маркера в точках</td>
</tr>

<tr>
<td class="my"><b>markerfacecolor</b> или <b>mfc</b></td>
<td class="my">Один из возможных способов представления цвета в <strong>matplotlib</strong>, подробности смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#color">ниже</a></td>
<td class="my">Цвет маркера</td>
</tr>

<tr>
<td class="my"><b>markersize</b> или <b>ms</b></td>
<td class="my">float</td>
<td class="my">Размер маркера в точках</td>
</tr>

<tr>
<td class="my"><b>markevery</b></td>
<td class="my">None, integer N, список/кортеж (integer start, integer N)</td>
<td class="my">Свойство определяет, как будут использоваться маркеры при построении данной линии. Если None будут отображены все маркеры. Если целое число N, будет отображен каждый N-ый маркер. Если кортеж целых чисел (start, N) будет отображен каждый N-ый маркер начиная с start. Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#markevery">ниже</a></td>
</tr>

<tr>
<td class="my"><b>solid_capstyle</b></td>
<td class="my">Строки: 'butt', 'round', 'projecting'</td>
<td class="my">Стиль оконечностей непрерывной линии</td>
</tr>

<tr>
<td class="my"><b>solid_joinstyle</b></td>
<td class="my">Строки: 'miter', 'round', 'bevel'</td>
<td class="my">Стиль соединения непрерывных линий</td>
</tr>

<tr>
<td class="my"><b>visible</b></td>
<td class="my">True, False</td>
<td class="my">В случае False линия и маркеры становятся невидимыми. True включает отображение элементов линии</td>
</tr>

<tr>
<td class="my"><b>zorder</b></td>
<td class="my">integer</td>
<td class="my">Порядок наложения элементов диаграммы (Z-order). Элемент с наибольшим значением <b>zorder</b> будет отображен на переднем плане (по отношению к наблюдателю) или, другими словами, элемент с наибольшим <b>zorder</b> будет отображен последним (самым верхним).  Пример использования смотри <a href="http://pyviy.blogspot.com/2009/09/matplotlib.html#zorder">ниже</a></td>
</tr>

</tbody>

</table>

<a name="color"></a><h4>Способы представления цвета в пакете matplotlib</h4>

<p>Как следует из названия подраздела цвет в <strong>matplotlib</strong> может быть задан несколькими способами.</p>

<p><b>Способ первый.</b> Из системы <b>Matlab</b> позаимствованы обозначения для восьми базовых цветов в виде отдельных символов.</p>

<table class="my">

<tbody>

<tr>
<th class="my" width="30%">Символ</th>

<th class="my" colspan="2">Цвет</th>
</tr>

<tr>
<td class="my">'b'</td>
<td class="my" width="35%">blue</td>
<td class="my">синий</td>
</tr>

<tr>
<td class="my">'g'</td>
<td class="my">green</td>

<td class="my">зеленый</td>
</tr>

<tr>
<td class="my">'r'</td>
<td class="my">red</td>
<td class="my">красный</td>
</tr>

<tr>
<td class="my">'c'</td>
<td class="my">cyan</td>

<td class="my">бирюзовый</td>
</tr>

<tr>
<td class="my">'m'</td>
<td class="my">magenta</td>
<td class="my">пурпурный</td>
</tr>

<tr>
<td class="my">'y'</td>
<td class="my">yellow</td>

<td class="my">желтый</td>
</tr>

<tr>
<td class="my">'k'</td>
<td class="my">black</td>
<td class="my">черный</td>
</tr>

<tr>
<td class="my">'w'</td>
<td class="my">white</td>

<td class="my">белый</td>
</tr>

</tbody>

</table>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot(X, Y_02, color = 'm')</span>
</pre>

<p><b>Способ второй.</b> Цвет можно задать используя стандартные обозначения цветов принятые в html, как то 'red', 'silver', 'olive' и так далее.</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot(X, Y_02, color = 'navy')</span>
</pre>

<p><b>Способ третий.</b> Произвольный цвет можно задать воспользовавшись HEX стилем представления цвета в html: '#cc00cc', '#9900ff', '#0099cc'.</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot(X, Y_02, color = '#003399')</span>
</pre>

<p><b>Способ четвертый.</b> Произвольный цвет так же можно задать передав кортеж из трех вещественных чисел, каждое из которых пренадлежит интервалу [0.0, 1.0]. Числа соответствуют представлению цвета в системе RGB: (0.75, 0.0, 1.0), (1.0, 0.33, 0.33), (0.0, 0.47, 0.21).</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot(X, Y_02, color = (0.0, 0.5, 0.32))</span>
</pre>

<p><b>Способ пятый.</b> Вариация на тему четвертого способа. Цвет в градации серого можно задать передав <b>строку</b> являющуюся представлением вещественного числа в диапазоне [0.0, 1.0], '0.0' - совсем черный, '1.0' - совсем белый.</p>

<pre class="codeblock"><span class="console">&gt;&gt;&gt;</span><span class="code"> plt.plot(X, Y_02, color = '0.75')</span>
</pre>

<a name="drawstyle"></a><h4>Свойства linestyle и drawstyle</h4>

<p>Свойство <span class="code">linestyle</span> включает в себя свойство <span class="code">drawstyle</span> - стили отрисовки "ступенек" можно задать как через <span class="code">drawstyle</span> так и через <span class="code">linestyle</span>. Пример использования на рисунке ниже:</p>

<a href="http://lh5.ggpht.com/_oMYflydwAbM/SsMbgaCsIsI/AAAAAAAAAKI/gXg9gz2zXNk/line_style_01.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/line_style_01.png" border="0" alt="Пакет matplotlib. Пример использования свойства drawstyle"></a>

<p>Значения свойства <span class="code">drawstyle</span> и остальные значения свойства <span class="code">linestyle</span> можно комбинировать. Пример на рисунке ниже:</p>

<a href="http://lh3.ggpht.com/_oMYflydwAbM/SsMc2RtiaRI/AAAAAAAAAKM/EmKBHoSxaKI/line_style_02.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/line_style_02.png" border="0" alt="Пакет matplotlib. Пример использования свойства linestyle"></a>

<a name="dash_capstyle"></a><h4>Свойство dash_capstyle</h4>

<p>Для того, чтобы ясно углядеть различия в начертаниях "кончика штриха" необходимо установить толщину линии как минимум в четыре точки. Пример использования на рисунке:</p>

<a href="http://lh6.ggpht.com/_oMYflydwAbM/SsMe1H1i7-I/AAAAAAAAAKQ/2ZqV_7KQ-RM/dash_capstyle.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/dash_capstyle.png" border="0" alt="Пакет matplotlib. Пример использования свойства dash_capstyle"></a>

<a name="dashes"></a><h4>Свойство dashes</h4>

<p>Когда существующие стили пунктирных линий не устраивают, можно поиграться с значениями свойства <span class="code">dashes</span>:</p>

<a href="http://lh6.ggpht.com/_oMYflydwAbM/SsMkJNGqFzI/AAAAAAAAAKU/Mq5PrQLpIWw/dashes.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/dashes.png" border="0" alt="Пакет matplotlib. Пример использования свойства dashes"></a>

<a name="markevery"></a><h4>Свойство markevery</h4>

<p>Когда данных много и при этом хочется отобразить линию с маркерами, избыточные маркеры, во избежании их слияния, необходимо как то удалить. Можно конечно специально отфильтровать данные (сделать выборку данных), но проще воспользоваться свойством <span class="code">markevery</span>. Вот код примера:</p>

<pre class="codeblock"><font color="#0000ff"># -*- coding: UTF-8 -*-</font>

<font color="#a020f0">import</font>&nbsp;numpy <font color="#a020f0">as</font>&nbsp;np
<font color="#a020f0">import</font>&nbsp;matplotlib <font color="#a020f0">as</font>&nbsp;mpl
<font color="#a020f0">import</font>&nbsp;matplotlib.pyplot <font color="#a020f0">as</font>&nbsp;plt

<font color="#0000ff"># Значения по оси X</font>
X = np.linspace(0.0, 2.0, 36)
<font color="#0000ff"># Значения по оси Y</font>
Y_01 = np.exp(X)
Y_02 = np.exp(X) + 5.0

<font color="#0000ff"># Задаем размер диаграммы</font>
mpl.rcParams['<font color="#ff00ff">figure.figsize</font>'] = (8.0, 6.0)

<font color="#0000ff"># Строим диаграмму</font>

<font color="#0000ff"># Линии</font>
line_01,&nbsp;&nbsp;= plt.plot(X, Y_01, '<font color="#ff00ff">ro--</font>', markevery = None, label ='<font color="#ff00ff">markevery = None</font>')
line_02,&nbsp;&nbsp;= plt.plot(X, Y_02, '<font color="#ff00ff">bo--</font>', markevery = (0, 5), label = '<font color="#ff00ff">markevery = (0, 5)</font>')
<font color="#0000ff"># Подпись к диаграмме</font>
plt.title(u'<font color="#ff00ff">Свойство markevery</font>')
<font color="#0000ff"># Добавляем легенду</font>
plt.legend(loc = '<font color="#ff00ff">best</font>')
<font color="#0000ff"># Задаем интервалы значений по осям X, Y</font>
plt.axis((-0.03, 2.03, -0.03, 14.0))

<font color="#0000ff"># Сохраняем диаграмму в файл</font>
plt.savefig('<font color="#ff00ff">markevery.png</font>', format = '<font color="#ff00ff">png</font>')
</pre>

<p>А вот результат прогона кода:</p>

<a href="http://lh5.ggpht.com/_oMYflydwAbM/SsMoF0qKumI/AAAAAAAAAKY/5R__5H43N34/markevery.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/markevery.png" border="0" alt="Пакет matplotlib. Пример использования свойства markevery"></a>

<a name="zorder"></a><h4>Свойство zorder</h4>

<p>Чем больше значение свойства <span class="code">zorder</span> тем ближе к наблюдателю объект:</p>

<a href="http://lh6.ggpht.com/_oMYflydwAbM/SsMpZvOkIPI/AAAAAAAAAKc/ZQ7s8aeLUjY/circle.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/circle.png" border="0" alt="Пакет matplotlib. Пример использования свойства zorder"></a>

<a name="alpha"></a><h4>Свойство alpha</h4>

<p>Для иллюстрации "прозрачности" воспользуемся предыдущим рисунком. Получилось коряво, но смысл свойства <span class="code">alpha</span> понять можно (в <strong>matplotlib</strong> атрибут прозрачности жутко портит некоторые цвета)</p>

 <a href="http://lh3.ggpht.com/_oMYflydwAbM/SsMr-tJhNNI/AAAAAAAAAKo/tX-UraTZcso/alpha.png"><img src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/alpha.png" border="0" alt="Пакет matplotlib. Пример использования свойства alpha"></a>

<p>Ну вот пожалуй на сегодня и все...</p>

<p>Предыдущий пост по теме: <a href="http://pyviy.blogspot.com/2009/08/matplotlib_21.html">Пакет matplotlib. График с дополнительной осью ординат</a>.</p>

</span>
<div style="clear: both;"></div>
</div>
<div class="post-footer">
<div class="post-footer-line post-footer-line-1">
<span class="post-author vcard">
Автор:
<span class="fn">Вий</span>
</span>
<span class="post-timestamp">
на
<a class="timestamp-link" href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/Незамысловатый блог  Пакет matplotlib. Наводим красивости.htm" rel="bookmark" title="permanent link"><abbr class="published" title="2009-09-30T17:45:00+06:00">17:45</abbr></a>
</span>
<span class="reaction-buttons">
</span>
<span class="star-ratings">
</span>
<span class="post-comment-link">
</span>
<span class="post-backlinks post-comment-link">
</span>
<span class="post-icons">
</span>
</div>
<div class="post-footer-line post-footer-line-2">
<span class="post-labels">
Ярлыки:
<a href="http://pyviy.blogspot.com/search/label/matplotlib" rel="tag">matplotlib</a>,
<a href="http://pyviy.blogspot.com/search/label/Python" rel="tag">Python</a>
</span>
</div>
<div class="post-footer-line post-footer-line-3">
<span class="post-location">
</span>
</div>
</div>
</div>
<div class="comments" id="comments">
<a name="comments"></a>
<h4>Комментариев нет:</h4>
<div id="Blog1_comments-block-wrapper">
<dl class="avatar-comment-indent" id="comments-block">
</dl>
</div>
<p class="comment-footer">
</p><div class="comment-form">
<a name="comment-form"></a>
<h4 id="comment-post-message">Отправить комментарий</h4>
<p>
</p>
<a href="http://www.blogger.com/comment-iframe.g?blogID=920988537392180762&postID=2561400527735838727&blogspotRpcToken=9722917" id="comment-editor-src"></a>
<iframe allowtransparency="true" class="blogger-iframe-colorize blogger-comment-from-post" frameborder="0" height="235px" id="comment-editor" name="comment-editor" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/comment-iframe.htm" width="100%"></iframe>
<script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/4030612614-comment_from_post_iframe.js"></script>
<script type="text/javascript">
      BLOG_CMT_createIframe('http://www.blogger.com/rpc_relay.html', '12397856868849216896');
    </script>
</div>
<p></p>
<div id="backlinks-container">
<div id="Blog1_backlinks-container"><a name="links"></a><h4>Ссылки на это сообщение</h4>
<p class="comment-footer">
<a class="comment-link" href="http://www.blogger.com/blog-this.g" id="Blog1_backlinks-create-link" target="_blank">Создать ссылку</a>
</p>
</div>
</div>
</div>
</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class="blog-pager" id="blog-pager">
<span id="blog-pager-newer-link">
<a class="blog-pager-newer-link" href="http://pyviy.blogspot.com/2010/12/gcc.html" id="Blog1_blog-pager-newer-link" title="Следующее">Следующее</a>
</span>
<span id="blog-pager-older-link">
<a class="blog-pager-older-link" href="http://pyviy.blogspot.com/2009/09/blog-post.html" id="Blog1_blog-pager-older-link" title="Предыдущее">Предыдущее</a>
</span>
<a class="home-link" href="http://pyviy.blogspot.com/">Главная страница</a>
</div>
<div class="clear"></div>
<div class="post-feeds">
<div class="feed-links">
Подписаться на:
<a class="feed-link" href="http://pyviy.blogspot.com/feeds/2561400527735838727/comments/default" target="_blank" type="application/atom+xml">Комментарии к сообщению (Atom)</a>
</div>
</div>
</div></div>
</div>
<div id="sidebar-wrapper">
<div class="sidebar section" id="sidebar"><div class="widget HTML" id="HTML2">
<h2 class="title">RSS</h2>
<div class="widget-content">
<a href="http://feeds.feedburner.com/pyviy" rel="alternate" title="Subscribe to my feed" type="application/rss+xml"><img alt="" style="border:0" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/feed-icon32x32.png"></a><a href="http://feeds.feedburner.com/pyviy" rel="alternate" title="Subscribe to my feed" type="application/rss+xml">Подписаться</a>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=HTML&widgetId=HTML2&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML2&quot;));" target="configHTML2" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget Text" id="Text1">
<h2 class="title">О блоге</h2>
<div class="widget-content">
Блог о свободном программном обеспечении<br>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=Text&widgetId=Text1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Text1&quot;));" target="configText1" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget Profile" id="Profile1" style="">
<h2>Обо мне</h2>
<div class="widget-content">
<dl class="profile-datablock">
<dt class="profile-data">
<a class="profile-name-link" href="http://www.blogger.com/profile/14118793713624648446" rel="author" style="background-image: url(//www.blogger.com/img/logo-16.png);">
Вий
</a>
</dt>
</dl>
<a class="profile-link" href="http://www.blogger.com/profile/14118793713624648446" rel="author">Весь профиль</a>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=Profile&widgetId=Profile1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Profile1&quot;));" target="configProfile1" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget HTML" id="HTML5">
<div class="widget-content">
<noindex>
<a href="http://www.publicons.de/"><img alt="POWERED BY PUBLICONS.DE" style="border-width: 0;" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/iam.png"></a><br>
</noindex>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=HTML&widgetId=HTML5&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML5&quot;));" target="configHTML5" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget Label" id="Label1">
<h2>Ярлыки</h2>
<div class="widget-content cloud-label-widget-content">
<span class="label-size label-size-5">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/Python">Python</a>
<span class="label-count" dir="ltr">(5)</span>
</span>
<span class="label-size label-size-4">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/matplotlib">matplotlib</a>
<span class="label-count" dir="ltr">(4)</span>
</span>
<span class="label-size label-size-4">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/blogger">blogger</a>
<span class="label-count" dir="ltr">(3)</span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/Firefox">Firefox</a>
<span class="label-count" dir="ltr">(2)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/C%2FC%2B%2B">C/C++</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/Google">Google</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/NumPy">NumPy</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/gcc">gcc</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/linix">linix</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://pyviy.blogspot.com/search/label/vim">vim</a>
<span class="label-count" dir="ltr">(1)</span>
</span>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=Label&widgetId=Label1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Label1&quot;));" target="configLabel1" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget BlogArchive" id="BlogArchive1">
<h2>Архив блога</h2>
<div class="widget-content">
<div id="ArchiveList">
<div id="BlogArchive1_ArchiveList">
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://pyviy.blogspot.com/search?updated-min=2010-01-01T00:00:00%2B05:00&updated-max=2011-01-01T00:00:00%2B05:00&max-results=1">2010</a>
<span class="post-count" dir="ltr">(1)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://pyviy.blogspot.com/2010_12_01_archive.html">Декабрь</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://pyviy.blogspot.com/search?updated-min=2009-01-01T00:00:00%2B05:00&updated-max=2010-01-01T00:00:00%2B05:00&max-results=11">2009</a>
<span class="post-count" dir="ltr">(11)</span>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://pyviy.blogspot.com/2009_09_01_archive.html">Сентябрь</a>
<span class="post-count" dir="ltr">(4)</span>
<ul class="posts">
<li><a href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/Незамысловатый блог  Пакет matplotlib. Наводим красивости.htm">Пакет matplotlib. Наводим красивости</a></li>
<li><a href="http://pyviy.blogspot.com/2009/09/blog-post.html">Подсветка синтаксиса в блоге. Используем онлайновы...</a></li>
<li><a href="http://pyviy.blogspot.com/2009/09/numpy.html">Пакет NumPy. Краткое введение</a></li>
<li><a href="http://pyviy.blogspot.com/2009/09/firefox-gtranslate-google.html">Дополнение Firefox gTranslate. Мгновенный доступ к...</a></li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://pyviy.blogspot.com/2009_08_01_archive.html">Август</a>
<span class="post-count" dir="ltr">(7)</span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;BlogArchive1&quot;));" target="configBlogArchive1" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget HTML" id="HTML1">
<div class="widget-content">
<noindex>
<script language="javascript" type="text/javascript">
r=escape(document.referrer); u=escape(document.URL);
s=(typeof(screen)=='undefined')?'':screen.width+'x'+screen.height+'x'+(screen.colorDepth?screen.colorDepth:screen.pixelDepth);
</script>
<table border="0" cellpadding="0" cellspacing="0" width="88" style="line-height:0;width:88px;" height="31"><tbody><tr style="height:10px;">
<td style="padding:0;width:38px;height:10px;"><a href="http://www.24log.de/" target="_blank"><img border="0" width="38" alt="Besucherzahler" style="margin:0;padding:0;" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/bg24-6_1.gif" height="10" title="Besucherzahler "></a></td>
<td style="padding:0;width:50px;height:10px;"><a href="http://www.russianwoman.ca/" target="_blank"><img border="0" width="50" alt="russian women" style="margin:0;padding:0;" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/bg24-6_3.gif" height="10"></a></td></tr>
<tr style="height:21px;"><td style="padding:0;width:38px;height:21px"><a href="http://www.24log.ru/" target="_blank"><img border="0" width="38" alt="счетчик посещений" style="margin:0;padding:0;" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/bg24-6_2.gif" height="21" title="счетчик посещений"></a></td>
<script language="javascript" type="text/javascript">
document.write('<td style="padding:0px;width:50px;height:21px;"><a href="http://www.24log.ru/rating/rating.php?c=7" target="_blank"><img border="0" width="50" alt="Рейтинг: Компьютеры, программы" style="margin:0;padding:0;" src="http://counter.24log.ru/counter?id=92860&t=24&st=6&r='+r+'&s='+s+'&u='+u+'&rnd='+Math.random()+'" height="21" title="Показано число просмотров всего и за сегодня"/></a></td>');
</script><td style="padding:0px;width:50px;height:21px;"><a href="http://www.24log.ru/rating/rating.php?c=7" target="_blank"><img border="0" width="50" alt="Рейтинг: Компьютеры, программы" style="margin:0;padding:0;" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/counter" height="21" title="Показано число просмотров всего и за сегодня"></a></td></tr></tbody></table><noscript>&lt;a href="http://www.russianwoman.ca/index.php?Language=French"&gt;Rencontre femmes russes&lt;/a&gt;</noscript>
</noindex>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=HTML&widgetId=HTML1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML1&quot;));" target="configHTML1" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget HTML" id="HTML3">
<div class="widget-content">
<noindex>
<a id="clustrMapsLink" href="http://www3.clustrmaps.com/counter/maps.php?url=http://pyviy.blogspot.com/"><img id="clustrMapsImg" style="border:0px;" alt="Locations of visitors to this page" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/index2.php" onerror="this.onerror=null; this.src=&#39;http://www2.clustrmaps.com/images/clustrmaps-back-soon.jpg&#39;; document.getElementById(&#39;clustrMapsLink&#39;).href=&#39;http://www2.clustrmaps.com&#39;;" title="Locations of visitors to this page">
</a>
</noindex>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=HTML&widgetId=HTML3&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML3&quot;));" target="configHTML3" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget HTML" id="HTML4">
<div class="widget-content">
<noindex>
<a href="http://s05.flagcounter.com/more/2Iux"><img border="0" alt="free counters" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/saved_resource"></a>
</noindex>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=920988537392180762&widgetType=HTML&widgetId=HTML4&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML4&quot;));" target="configHTML4" title="Изменить">
<img alt="" height="18" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div></div>
</div>
<!-- spacer for skins that want sidebar and main to be the same height-->
<div class="clear">&nbsp;</div>
</div>
<!-- end content-wrapper -->
<div id="footer-wrapper">
<div class="footer section" id="footer"></div>
</div>
</div></div>
<!-- end outer-wrapper -->
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/1040267425-widgets.js"></script>
<script type="text/javascript">
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV1";window['blogger_blog_id'] = '920988537392180762';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d920988537392180762','//pyviy.blogspot.com/2009/09/matplotlib.html','920988537392180762');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '920988537392180762', 'bloggerUrl': 'http://www.blogger.com', 'title': 'Незамысловатый блог', 'pageType': 'item', 'url': 'http://pyviy.blogspot.com/2009/09/matplotlib.html', 'canonicalUrl': 'http://pyviy.blogspot.com/2009/09/matplotlib.html', 'canonicalHomepageUrl': 'http://pyviy.blogspot.com/', 'homepageUrl': 'http://pyviy.blogspot.com/', 'blogspotFaviconUrl': 'http://pyviy.blogspot.com/favicon.ico', 'enabledCommentProfileImages': true, 'adultContent': false, 'analyticsAccountNumber': '', 'searchLabel': '', 'searchQuery': '', 'pageName': 'Пакет matplotlib. Наводим красивости', 'pageTitle': 'Незамысловатый блог: Пакет matplotlib. Наводим красивости', 'encoding': 'UTF-8', 'locale': 'ru', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Незамысловатый блог - Atom\42 href\75\42http://pyviy.blogspot.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Незамысловатый блог - RSS\42 href\75\42http://pyviy.blogspot.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Незамысловатый блог - Atom\42 href\75\42http://www.blogger.com/feeds/920988537392180762/posts/default\42 /\76\n\74link rel\75\42EditURI\42 type\75\42application/rsd+xml\42 title\75\42RSD\42 href\75\42http://www.blogger.com/rsd.g?blogID\75920988537392180762\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Незамысловатый блог - Atom\42 href\75\42http://pyviy.blogspot.com/feeds/2561400527735838727/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'postImageThumbnailUrl': 'http://lh5.ggpht.com/_oMYflydwAbM/SsHl7qLBflI/AAAAAAAAAJ8/3RNEUfVcrWw/s72-c/setp_example.png', 'imageSrcTag': '\74link rel\75\42image_src\42 href\75\42http://lh5.ggpht.com/_oMYflydwAbM/SsHl7qLBflI/AAAAAAAAAJ8/3RNEUfVcrWw/s72-c/setp_example.png\42 /\76\n', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var a\75window,b\75\42jstiming\42,d\75\42tick\42;var e\75function(c){this.t\75{};this.tick\75function(c,p,h){h\75void 0!\75h?h:(new Date).getTime();this.t[c]\75[h,p]};this[d](\42start\42,null,c)},f\75new e;a.jstiming\75{Timer:e,load:f};if(a.performance\46\46a.performance.timing){var g\75a.performance.timing,j\75a[b].load,k\75g.navigationStart,l\75g.responseStart;0\74k\46\46l\76\75k\46\46(j[d](\42_wtsrt\42,void 0,k),j[d](\42wtsrt_\42,\42_wtsrt\42,l),j[d](\42tbsd_\42,\42wtsrt_\42))}\ntry{var m\75null;a.chrome\46\46a.chrome.csi\46\46(m\75Math.floor(a.chrome.csi().pageT),j\46\0460\74k\46\46(j[d](\42_tbnd\42,void 0,a.chrome.csi().startE),j[d](\42tbnd_\42,\42_tbnd\42,k)));null\75\75m\46\46a.gtbExternal\46\46(m\75a.gtbExternal.pageT());null\75\75m\46\46a.external\46\46(m\75a.external.pageT,j\46\0460\74k\46\46(j[d](\42_tbnd\42,void 0,a.external.startE),j[d](\42tbnd_\42,\42_tbnd\42,k)));m\46\46(a[b].pt\75m)}catch(n){};a.tickAboveFold\75function(c){var i\0750;if(c.offsetParent){do i+\75c.offsetTop;while(c\75c.offsetParent)}c\75i;750\76\75c\46\46a[b].load[d](\42aft\42)};var q\75!1;function r(){q||(q\75!0,a[b].load[d](\42firstScrollTime\42))}a.addEventListener?a.addEventListener(\42scroll\42,r,!1):a.attachEvent(\42onscroll\42,r);\n })();\74/script\076', 'mobileHeadScript': '', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/04452fcc9c8aa994'}}, {'name': 'skin', 'data': {'vars': {'sidebarHeaderColor': '#555544', 'linkColor': '#669922', 'mainTextColor': '#555544', 'bodyFont': 'normal normal 120% Trebuchet, Trebuchet MS, Arial, sans-serif', 'blogDescriptionColor': '#ffffee', 'dateHeaderColor': '#555544', 'endSide': 'right', 'startSide': 'left', 'sidebarTextColor': '#555544', 'pageHeaderColor': '#ffffee', 'mainBgColor': '#ffffff', 'hoverLinkColor': '#88bb22'}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '/?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '/?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '/?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '/?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '/?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '/?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '/?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'sidebar', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_TextView', new _WidgetInfo('Text1', 'sidebar', null, document.getElementById('Text1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_ProfileView', new _WidgetInfo('Profile1', 'sidebar', null, document.getElementById('Profile1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML5', 'sidebar', null, document.getElementById('HTML5'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_LabelView', new _WidgetInfo('Label1', 'sidebar', null, document.getElementById('Label1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebar', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML3', 'sidebar', null, document.getElementById('HTML3'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML4', 'sidebar', null, document.getElementById('HTML4'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar', null, document.getElementById('Navbar1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'showBacklinks': true, 'postId': '2561400527735838727', 'lightboxEnabled': true, 'lightboxModuleUrl': '//www.blogger.com/static/v1/jsbin/3962926403-lbx_ru.js', 'lightboxCssUrl': '//www.blogger.com/static/v1/v-css/228702327-lightbox_bundle.css'}, 'displayModeFull'));
</script>

<div id="gleeBox" style="display:none" class="GleeThemeDefault gleeMediumSize"><input type="text" id="gleeSearchField" value="" autocomplete="off" class="ac_input GleeThemeDefault gleeMediumSize"><div id="gleeSub"><div id="gleeSubText"></div><div id="gleeSearchActivity"></div><div id="gleeSubURL"></div></div></div><link type="text/css" rel="stylesheet" href="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/228702327-lightbox_bundle.css"><script type="text/javascript" src="./Незамысловатый блог  Пакет matplotlib. Наводим красивости_files/3962926403-lbx_ru.js"></script><sfmsg id="sfMsgId" data="{&quot;imageCount&quot;:0,&quot;ip&quot;:&quot;178.49.120.77&quot;}"></sfmsg></body><style type="text/css">/*This block of style rules is injected by gleeBox*/.GleeReaped { background-color: #f9f2a5 !important; outline: 1px dotted #818181 !important; } .GleeHL { -webkit-box-shadow: hsla(71, 89%, 70%, 1) -2px -2px 0px, hsla(71, 89%, 70%, 1)  2px -2px 0px, hsla(71, 100%, 45%, 1) -2px  2px 0px, hsla(71, 100%, 45%, 1)  2px  2px 0px, hsla(71, 100%, 80%, 1)  0px 0px 0px 3px, rgba(42, 35, 0, 0.8)  1px  1px 3px 3px !important; border-radius: 3px !important; color: #000 !important; outline: none !important; border: none !important; background: -webkit-gradient(linear, left bottom, left top, color-stop(0, hsla(71, 100%, 47%, 1)), color-stop(1, hsla(71, 89%, 70%, 1))) !important;} a.GleeHL, .GleeHL a {color: #000 !important;} input[type=checkbox].GleeHL, input[type=radio].GleeHL { outline: 5px solid hsla(71, 89%, 70%, 1) !important;}</style></html>